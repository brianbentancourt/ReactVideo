'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BrowserDetection = function (_React$Component) {
  _inherits(BrowserDetection, _React$Component);

  function BrowserDetection() {
    var _ref;

    _classCallCheck(this, BrowserDetection);

    for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
      params[_key] = arguments[_key];
    }

    var _this = _possibleConstructorReturn(this, (_ref = BrowserDetection.__proto__ || Object.getPrototypeOf(BrowserDetection)).call.apply(_ref, [this].concat(params)));

    _initialiseProps.call(_this);

    var isAndroid = navigator.userAgent.toLowerCase().indexOf('android') !== -1;
    var isIE = /*@cc_on!@*/false || !!document.documentMode;
    var isEdge = !isIE && !!window.StyleMedia;
    var isFirefox = typeof InstallTrigger !== 'undefined';
    var isOpera = !!window.opr && !!window.opr.addons || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;
    var isChrome = !!window.chrome && (!!window.chrome.webstore || isAndroid) && navigator.userAgent.toLowerCase().indexOf('googlebot') === -1;
    var isSafari = !isChrome && navigator.userAgent.toLowerCase().indexOf('safari') !== -1;
    var isBlink = (isChrome || isOpera) && !!window.CSS;
    var isGoogleBot = navigator.userAgent.toLowerCase().indexOf('googlebot') !== -1;
    var browser = void 0;

    if (isIE) {
      browser = 'ie';
    } else if (isEdge) {
      browser = 'edge';
    } else if (isFirefox) {
      browser = 'firefox';
    } else if (isOpera) {
      browser = 'opera';
    } else if (isChrome) {
      browser = 'chrome';
    } else if (isSafari) {
      browser = 'safari';
    } else if (isBlink) {
      browser = 'blink';
    } else if (isGoogleBot) {
      browser = 'googlebot';
    } else {
      browser = 'unknown';
    }

    _this.state = {
      browser: browser,
      isAndroid: isAndroid
    };
    _this.state.children = _this.renderChildren();
    return _this;
  }

  _createClass(BrowserDetection, [{
    key: 'render',
    value: function render() {
      return this.props.once ? this.state.children : this.renderChildren();
    }
  }]);

  return BrowserDetection;
}(_react2.default.Component);

BrowserDetection.defaultProps = {
  once: true
};
BrowserDetection.propTypes = {
  children: _propTypes.object.isRequired,
  once: _propTypes.bool
};

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.renderChildren = function () {
    var children = _this2.props.children;
    var _state = _this2.state,
        browser = _state.browser,
        isAndroid = _state.isAndroid;

    var render = (isAndroid ? children['android-' + browser] || children.android : null) || children[browser] || children.default || function () {
      return null;
    };
    return render(browser);
  };
};

exports.default = BrowserDetection;